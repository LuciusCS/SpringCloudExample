server:
  port: 8001


spring:
  profiles:
    active: mac   #开发环境
  application:
    name: authorization-client  # 服务名称
  # 服务名称+开发环境+文件后缀名 = nacos配置的Data Id
  # 服务名称+开发环境+文件后缀名 = nacos配置的Data Id
  main:
    web-application-type: servlet #reactive
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          ## 已经登记的客户端
          oidc-client:
            provider: spring   # 在下文配置了 行
            client-id: client1234
            client-secret: secret
            authorization-grant-type: client_credentials

            ## 这里返回的地址是 authorization-client的地址
            ## authorization-server 会将数据重定向到这个接口
#            redirect-uri: http://127.0.0.1:8001/login/oauth2/code/client1234
#            scope:
##              - openid
##              - profile
#              - read
#              - write

            ## 这个名字将会在登陆页面显示，类似于QQ 微信的等登陆方式
            client-name: oidc-client
        # 上文用的 provider
        provider:
          spring:   ## 名字应该是任意的
#             issuer-uri: http://localhost:8003  # 这里的地址是 authorization-server的地址
             authorization-uri: http://localhost:8003/oauth2/authorize
             token-uri: http://localhost:8003/oauth2/token
             user-info-uri: http://localhost:8003/userinfo
---
spring:
  config:
    activate:
      on-profile: mac
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.22.180:8848
        group: spring-cloud-example-dev  # 需要在nacos 的namespace中创建，名字为spring-cloud-example-dev的Service
        namespace: cb500d3d-c86c-4230-8f7f-f5434caf711a   # 将spring-cloud-example-dev的namespace中id填入
        username: nacos
        password: nacos
        enable: true
      config:
        group: spring-cloud-example-dev  # 需要在nacos 的namespace中创建，名字为spring-cloud-example-dev的Service
        namespace: cb500d3d-c86c-4230-8f7f-f5434caf711a   # 将spring-cloud-example-dev的namespace中id填入
        username: nacos
        password: nacos
        import-check:
          enabled: false
        enable: true
  ## 用于配置数据库
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.22.180:3306/spring_cloud_db
    #    url: jdbc:mysql://127.0.0.1:3306/spring_cloud_db
    username: root
    password: 123456



#security:
#  ignored=/**:
#  enable-csrf: false

